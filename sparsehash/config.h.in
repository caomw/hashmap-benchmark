/* src/config.h.in.  Generated from configure.ac by autoheader.  */

/* Namespace for Google classes */
#define GOOGLE_NAMESPACE  ::google

/* the location of the header defining hash functions */
#define HASH_FUN_H <functional>

/* the namespace of the hash<> function */
#define HASH_NAMESPACE std

/* Define to 1 if you have the <inttypes.h> header file. */
#cmakedefine HAVE_INTTYPES_H

/* Define to 1 if the system has the type `long long'. */
#cmakedefine HAVE_LONG_LONG

/* Define to 1 if you have the `memcpy' function. */
#define HAVE_MEMCPY 1

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H

/* Define to 1 if the system has the type `uint16_t'. */
#cmakedefine HAVE_UINT16_T

/* Define to 1 if the system has the type `u_int16_t'. */
#cmakedefine HAVE_U_INT16_T

/* Define to 1 if the system has the type `__uint16'. */
#cmakedefine HAVE___UINT16

/* The system-provided hash function including the namespace. */
#define SPARSEHASH_HASH std::hash

/* Stops putting the code inside the Google namespace */
#define _END_GOOGLE_NAMESPACE_ }

/* Puts following code inside the Google namespace */
#define _START_GOOGLE_NAMESPACE_ namespace google {
